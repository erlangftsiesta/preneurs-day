<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real-time Company Voting</title>
</head>
<body>
    <h1>Real-time Company Voting</h1>
    <p style="text-align: center;">Your Unique Key: <%= uniqueKey %></p>

    <div id="companies-list">
        <ul id="company-list">
            <!-- List of companies will be appended here dynamically -->
        </ul>
    </div>

    <script>
        const apiUrl = 'https://49kdgk28-1100.asse.devtunnels.ms/api/v1/get/data';

        async function fetchData() {
            try {
                const response = await fetch(apiUrl);
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const data = await response.json();
                if (data && data.payload && Array.isArray(data.payload.datas)) {
                    displayCompanies(data.payload.datas);
                } else {
                    console.error('Data format is incorrect:', data);
                }
            } catch (error) {
                console.error('Fetch error:', error);
            }
        }

        function displayCompanies(companies) {
            const companyList = document.getElementById('company-list');
            companyList.innerHTML = ''; // Clear the current list

            companies.forEach(company => {
                const listItem = document.createElement('li');
                listItem.innerHTML = `
                    <span>${company.company_name}</span> <br>
                    <span>Points: ${company.point ?? 0}</span> <br>
                    <button id="vote-button-${company.stand_number}" onclick="vote(${company.stand_number})">Vote</button>
                `;
                companyList.appendChild(listItem);
            });

            // Check LocalStorage and hide vote buttons if the user has already voted
            checkLocalStorageForVotes(companies);
        }

        async function vote(companyId) {
            try {
                const response = await fetch('https://49kdgk28-1100.asse.devtunnels.ms/api/v1/post/voting', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ stand_number: companyId })
                });
                const data = await response.json();
                console.log('Vote response:', data);
                if (data.status_code === 200) {
                    // Store the vote status in LocalStorage
                    localStorage.setItem(`hasVoted_${companyId}`, true);
                    // Immediately fetch data to update the UI
                    fetchData();
                }
            } catch (error) {
                console.error('Error voting:', error);
            }
        }

        function checkLocalStorageForVotes(companies) {
            companies.forEach(company => {
                const hasVoted = localStorage.getItem(`hasVoted_${company.stand_number}`);
                if (hasVoted) {
                    const voteButton = document.getElementById(`vote-button-${company.stand_number}`);
                    if (voteButton) {
                        voteButton.style.display = 'none';
                    }
                }
            });
        }

        document.addEventListener('DOMContentLoaded', () => {
            fetchData();
            setInterval(fetchData, 1000); // Fetch data every second
        });
    </script>
</body>
</html>
